function table1()

    for sym = ["B", "C", "S", "A"]
        for i = 1:5
            name = char("T" + sym + "_" + i);
            T.edit(name, T.get(name) + 273.15);
        end
    end

    function he = gradDescent(Te, stepSize, maxIter, tol)
        h = 0; % TODO: Populate with good initial guess.
        dh = 0; % Initial Value doesn't matter, it will be replaced.
        n = 1;
        while(n<maxIter && F>tol)
            for i = 1:numel(Te)
                Li = sqrt(4/k/D)*L;
                Ai = Li - sqrt(4/k/D)*x(i);
                B = sqrt(D/4/k);
                Ci = Tinf - Te(i);

                F = F + (Ci + (thb*(cosh(Ai*(h(i))^(1/2)) + B*sinh(Ai*(h(i))^(1/2))))/(cosh((h(i))^(1/2)*Li) + B*sinh((h(i))^(1/2)*Li)))^2;
                dFdh = dFdh + 2*(Ci + (thb*(cosh(Ai*h(i)^(1/2)) + B*sinh(Ai*h(i)^(1/2))))/(cosh(h(i)^(1/2)*Li) + B*sinh(h(i)^(1/2)*Li)))*((Ai*thb*(sinh(Ai*h(i)^(1/2)) + B*cosh(Ai*h(i)^(1/2))))/(h(i)^(1/2)*(2*cosh(h(i)^(1/2)*Li) + 2*B*sinh(h(i)^(1/2)*Li))) - (Li*thb*(cosh(Ai*h(i)^(1/2)) + B*sinh(Ai*h(i)^(1/2)))*(sinh(h(i)^(1/2)*Li) + B*cosh(h(i)^(1/2)*Li)))/(2*h(i)^(1/2)*(cosh(h(i)^(1/2)*Li) + B*sinh(h(i)^(1/2)*Li))^2));
            
            h(n+1) = h(n) - stepSize*dFdh;
            dh(n+1) = 1.96*F/siz
            
        i = i+1;
        end
        
        % Grab Final Results:
        he = h(end);
        dh = dh(end);
        
        % Plot Process to Verify Convergence:
        figure();
        plot
    end

end
